apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  annotations:
    olm.providedAPIs: Instrumentation.v1alpha1.opentelemetry.io,OpAMPBridge.v1alpha1.opentelemetry.io,OpenTelemetryCollector.v1alpha1.opentelemetry.io,OpenTelemetryCollector.v1beta1.opentelemetry.io
  generateName: openshift-opentelemetry-operator-
  namespace: openshift-opentelemetry-operator
spec:
  upgradeStrategy: Default
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: obs-df-install-6
spec:
  observability:
    metrics: {}
  deploymentUpdateStrategy: {}
  config:
    connectors:
      spanmetrics:
        metrics_flush_interval: 15s
    exporters:
      debug:
        verbosity: detailed
      loki:
        auth:
          authenticator: bearertokenauth
        endpoint: 'https://loki-gateway-http.openshift-logging.svc.cluster.local:8080/api/logs/v1/application/loki/api/v1/push'
        tls:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
      otlp:
        endpoint: 'tempo-escotilla-distributor:4317'
        tls:
          insecure: true
      prometheus:
        add_metric_suffixes: false
        endpoint: '0.0.0.0:8889'
        resource_to_telemetry_conversion:
          enabled: true
    extensions:
      bearertokenauth:
        filename: /var/run/secrets/kubernetes.io/serviceaccount/token
    processors:
      k8sattributes:
        auth_type: serviceAccount
        extract:
          labels:
            - from: pod
              key: app.kubernetes.io/component
              tag_name: app.label.component
          metadata:
            - k8s.pod.name
            - k8s.container.name
            - k8s.namespace.name
        passthrough: false
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.container.name
              - from: resource_attribute
                name: k8s.namespace.name
          - sources:
              - from: connection
      resource:
        attributes:
          - action: insert
            key: loki.format
            value: json
          - action: upsert
            from_attribute: k8s.namespace.name
            key: kubernetes_namespace_name
          - action: upsert
            from_attribute: k8s.pod.name
            key: kubernetes_pod_name
          - action: upsert
            from_attribute: k8s.container.name
            key: kubernetes_container_name
          - action: upsert
            key: log_type
            value: application
          - action: insert
            key: loki.resource.labels
            value: 'log_type, kubernetes_namespace_name, kubernetes_pod_name, kubernetes_container_name'
      transform:
        log_statements:
          - context: log
            statements:
              - 'set(attributes["level"], ConvertCase(severity_text, "lower"))'
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: '0.0.0.0:4317'
          http:
            endpoint: '0.0.0.0:4318'
    service:
      extensions:
        - bearertokenauth
      pipelines:
        logs:
          exporters:
            - loki
            - debug
          processors:
            - k8sattributes
            - transform
            - resource
          receivers:
            - otlp
        logs/test:
          exporters:
            - debug
          receivers:
            - otlp
        metrics:
          exporters:
            - prometheus
          receivers:
            - spanmetrics
        traces:
          exporters:
            - otlp
            - spanmetrics
          receivers:
            - otlp
      telemetry:
        metrics:
          address: '0.0.0.0:8888'
  mode: deployment
  managementState: managed
  upgradeStrategy: automatic
  serviceAccount: otel-collector
---
apiVersion: opentelemetry.io/v1alpha1
kind: Instrumentation
metadata:
  name: instrumentation
  namespace: obs-df-install-6  
spec:
  exporter:
    endpoint: 'http://otel-collector:4317'
  nodejs:
    env:
      - name: OTEL_NODEJS_AUTO_INSTRUMENTATION_ENABLED
        value: 'true'
      - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
        value: 'http://otel-collector:4318/v1/logs'
  propagators:
    - tracecontext
    - baggage